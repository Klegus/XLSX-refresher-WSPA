name: Docker Build and Deploy

on:
  push:
    branches: [ "secondyear" ]
  pull_request:
    branches: [ "secondyear" ]

env:
  REGISTRY: registry.klegus.tech
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create .env file
        run: |
          cat << EOF > .env
          EMAIL=${{ secrets.EMAIL }}
          PASSWORD=${{ secrets.PASSWORD }}
          OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
          SELECTED_MODEL=${{ secrets.SELECTED_MODEL }}
          DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
          MONGO_URI=${{ secrets.MONGO_URI }}
          WERKZEUG_RUN_MAIN=${{ secrets.WERKZEUG_RUN_MAIN }}
          EOF

      - name: Log in to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy using password authentication
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          script: |
            # Pull the new image
            docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            
            # Stop and remove existing containers
            docker ps -q --filter "name=xlsx-refresher-wspa" | xargs -r docker stop
            docker ps -aq --filter "name=xlsx-refresher-wspa" | xargs -r docker rm
            
            # Start new container
            docker run -d \
              --name xlsx-refresher \
              --restart unless-stopped \
              -p 8081:80 \
              -e EMAIL=${{ secrets.EMAIL }} \
              -e PASSWORD=${{ secrets.PASSWORD }} \
              -e OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }} \
              -e SELECTED_MODEL=${{ secrets.SELECTED_MODEL }} \
              -e DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }} \
              -e MONGO_URI=${{ secrets.MONGO_URI }} \
              -e WERKZEUG_RUN_MAIN=${{ secrets.WERKZEUG_RUN_MAIN }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
